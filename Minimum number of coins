Minimum number of Coins 
Easy Accuracy: 79.99% Submissions: 2856 Points: 2
Given an infinite supply of each denomination of Indian currency { 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000 } and a target value N.
Find the minimum number of coins and/or notes needed to make the change for Rs N.


Example 1:

Input: N = 43
Output: 20 20 2 1
Explaination: 
Minimum number of coins and notes needed 
to make 43. 

Example 2:

Input: N = 1000
Output: 500 500
Explaination: minimum possible notes
is 2 notes of 500.

Your Task:
You do not need to read input or print anything. Your task is to complete the function minPartition() which takes the value N as input parameter and returns a list of integers in decreasing order.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)


Constraints:
1 ≤ N ≤ 106


Solution:
--------------------
#User function Template for python3

class Solution:
    def minPartition(self, N):
        # code here
        currency = [ 1, 2, 5, 10, 20, 50, 100, 200, 500, 2000]
        length = len(currency)
        ans = []
        i = length-1
        
        while(i>=0):
            while(N>=currency[i]):
                N -= currency[i]
                ans.append(currency[i])
            i -=1
        
        return ans

#{ 
#  Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    t = int(input())
    for _ in range(t):
        N = int(input())
        
        ob = Solution()
        arr = ob.minPartition(N)
        for i in range(len(arr)):
            print(arr[i],end=" ")
        print()
# } Driver Code Ends
